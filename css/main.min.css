*,::after,::before{box-sizing:border-box}html{font-family:system-ui,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji";line-height:1.15;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4}body{margin:0}b,strong{font-weight:bolder}code,kbd,pre,samp{font:1em ui-monospace,SFMono-Regular,Consolas,"Liberation Mono",Menlo,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-color:currentcolor}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}.header{background:#9564aa}.header__container{padding:15px 20px;position:relative;display:flex;align-items:center;justify-content:space-between}.header__title{font:700 48px/55px "Ubuntu";display:none;color:#fff}.header__menu{list-style:none;margin:0;padding:0;display:flex;align-items:center;justify-content:flex-end;gap:40px}.header__menu-link{font:700 14px/18px "Ubuntu";color:#fff;text-decoration:none;transition:all .3s ease-in}.header__menu-link:hover{color:#e0d1e6}.header__menu-link--premium{font:700 16px/18px "Ubuntu";display:none;color:#ffcf2d}.header__menu-link--premium:hover{color:#ffcf2d}.header__menu-item{position:absolute;right:-100%;top:-100%;z-index:2;transition:all .4s ease-in-out}.header__menu-item--premium{display:flex;flex-direction:row;align-items:center;padding:6px 13px;gap:10px;background:0 0;border-radius:10px;transition:all .3s ease-in;position:absolute;right:20px;top:6px}.header__menu-item--premium:hover{background:#4c3357}.burger{list-style:none;margin:0;padding:0;cursor:pointer;display:flex;flex-direction:column;gap:4px}.burger-item{height:2px;width:23px;background:#fff;cursor:pointer;transition:transform .3s ease,opacity .3s ease,top .3s ease;position:relative}.burger-item:nth-child(1),.burger-item:nth-child(3){transform:rotate(0);top:0}.burger.burger-open .burger-item:nth-child(1){transform:rotate(45deg);top:6px}.burger.burger-open .burger-item:nth-child(2){opacity:0}.burger.burger-open .burger-item:nth-child(3){transform:rotate(-45deg);top:-6px}.content{height:100%;width:100%}.content__container{margin:0 auto;padding:15px 20px;max-width:1200px}.content__title{font:700 20px/23px "Ubuntu";margin:0;padding-bottom:10px;width:100%;color:#000;position:relative}.content__title::before{content:"";position:absolute;left:0;bottom:0;height:2px;width:100%;background:#9564aa;opacity:.2}.content__button{font:700 16px/18px "Ubuntu";margin-top:30px;padding:20px;cursor:pointer;border:0;text-align:center;color:#000;width:100%;background:#ffcf2d;border-radius:10px;transition:all .4s ease-in-out}.content__button:hover{background:#c69900;color:#fff}.content__label{margin-top:15px;cursor:pointer;display:flex;align-items:center;gap:10px}.content__label-text{font:400 10px/16px "Ubuntu";margin:0;color:#000}.content__label-link{color:#9564aa;transition:all .3s ease-out}.content__label-link:hover{color:#41294c}.content__check{display:none}.content__checkmark,main{position:relative}.content__checkmark::before{content:"";background:#fff;border:1px solid #9564aa;border-radius:5px;border-color:#9564aa;display:block;width:20px;height:20px;transition:background .4s ease-in;display:flex;align-items:center;justify-content:center}.content__check:checked+.content__checkmark::before{content:url(../img/adcombo__icon-checked.svg);background:#9564aa;color:#fff;font-size:14px}.content__advantages{list-style:none;margin:30px 0 0;padding:0;display:grid;grid-template-columns:1fr;gap:10px}.content__advantages-item{display:flex;align-items:center;gap:10px}.content__advantages-text{font:700 12px/14px "Ubuntu";margin:0;color:#9564aa}.swiper{width:100%;height:100%;margin-top:25px;padding-bottom:24px}.swiper-pagination-bullet{background:#ffc500!important}.swiper-slide{height:60px;display:flex;align-items:center;justify-content:flex-end;width:100%}.swiper-text{font:700 14px/16px "Ubuntu";margin:0;padding:4px 10px;color:#000;position:absolute;left:0;top:15px;background:#ffcf2d;border-radius:5px;transition:all .4s ease-in}.swiper-block{padding:15px 30px;width:calc(100% - 20px);height:100%;background:#9564aa;border-radius:10px;display:flex;align-items:center;justify-content:flex-end}.swiper-button{display:none}.swiper-price{font:700 24px/28px "Ubuntu";text-align:center;color:#fff;display:flex;align-items:center}.swiper-price--highlight{font:700 8px/9px "Ubuntu";margin:0 2px 0 5px;padding:4px 3px;background:#ffcf2d;border-radius:50%;color:#000}.profile{display:none}body,html{overflow-x:hidden}.parallax{background:url(../img/adcombo__parallax--left.png) no-repeat left,url(../img/adcombo__parallax--right.png) no-repeat right;position:absolute;z-index:-1;width:100%;height:100%;background-size:cover;transition:transform .5s ease-out}.main__container{max-width:1200px;margin:30px auto;padding:0 20px;display:flex;gap:30px}@supports (-webkit-appearance:none){.parallax{background:url(../img/adcombo__parallax--left.webp) no-repeat left,url(../img/adcombo__parallax--right.png) no-repeat right}}@media screen and (min-width:576px){.content__title{font-family:"Ubuntu";font-style:normal;font-weight:700;font-size:40px;line-height:46px;text-shadow:4px 4px 0 rgba(0,0,0,.25)}.content__button{display:none}.content__banner{margin-top:30px;padding:15px;width:100%;display:flex;align-items:center;justify-content:space-between;background:#c15ca1;border-radius:10px}.content__banner-title{margin:0;font-weight:700;font-size:40px;line-height:46px;letter-spacing:.04em;color:#ffcf2d;text-shadow:1px 1px 0 #fff,-1px -1px 0 #fff,1px -1px 0 #fff,-1px 1px 0 #fff}.content__banner-text,.content__banner-timer,.content__banner-title{font-family:"Ubuntu";font-style:normal;text-align:center}.content__banner-text{margin:0;font-weight:700;font-size:16px;line-height:18px;color:#fff}.content__banner-timer{padding:5px 10px;background:#fff;border-radius:5px;font-weight:400;font-size:40px;line-height:46px;color:#000}.content__advantages{max-width:345px;margin:30px auto;grid-template-areas:"top-left top-left top-right top-right" "left center center right" "left center center right" "bottom-left bottom-left bottom-right bottom-right";grid-template-columns:repeat(4,78px);grid-template-rows:95px 50px 60px 80px}.content__advantages-item{flex-direction:column;gap:5px;max-width:110px}.content__advantages-item circle,.content__advantages-item path,.content__advantages-item rect{transition:all .4s ease-in-out}.content__advantages-item:not(:first-child):hover circle,.content__advantages-item:not(:first-child):hover path,.content__advantages-item:not(:first-child):hover rect{fill:#ffcf2d}.content__advantages-text{text-align:center}.content__advantages--center{grid-area:center;justify-self:center;align-self:end}.content__advantages--center img{width:129px;height:107px}.content__advantages--top-left{grid-area:top-left;justify-self:end;align-self:start}.content__advantages--top-right{grid-area:top-right;justify-self:start;align-self:start}.content__advantages--left{grid-area:left}.content__advantages--right{grid-area:right}.content__advantages--bottom-left{grid-area:bottom-left;justify-self:end;align-self:flex-end}.content__advantages--bottom-right{grid-area:bottom-right;justify-self:start;align-self:flex-end}.content__advantages--center{-ms-grid-row:2;-ms-grid-row-span:2;-ms-grid-column:2;-ms-grid-column-span:2}.content__advantages--top-left,.content__advantages--top-right{-ms-grid-row:1;-ms-grid-column:1;-ms-grid-column-span:2}.content__advantages--top-right{-ms-grid-column:3}.content__advantages--left,.content__advantages--right{-ms-grid-row:2;-ms-grid-row-span:2;-ms-grid-column:1}.content__advantages--right{-ms-grid-column:4}.content__advantages--bottom-left,.content__advantages--bottom-right{-ms-grid-row:4;-ms-grid-column:1;-ms-grid-column-span:2}.content__advantages--bottom-right{-ms-grid-column:3}.swiper{overflow:visible}.swiper-pagination{display:none}.swiper-wrapper{flex-wrap:wrap;-moz-column-gap:30px;column-gap:30px;row-gap:15px}.swiper-text{opacity:0;top:-30px}.swiper-slide{padding:15px;width:150px;height:auto;background:rgba(149,100,170,.1);border:2px solid #9564aa;border-radius:10px;justify-content:center;flex:1 1 auto;transition:all .4s ease-in-out}.swiper-slide:hover{background:#9564aa}.swiper-slide:hover .swiper-button{opacity:1;background:#ffcf2d;border-radius:5px;color:#000}.swiper-slide:hover .swiper-price{font-family:"Ubuntu";font-style:normal;font-weight:700;font-size:24px;line-height:28px;color:#fff}.swiper-slide:hover .swiper-text{opacity:1;position:absolute;top:-15px;left:0;right:0;margin:0 auto;max-width:125px}.swiper-block{padding:0;flex-wrap:wrap;justify-content:center;gap:10px;background:0 0}.swiper-button,.swiper-price{font-family:"Ubuntu";font-style:normal;text-align:center;transition:all .2s ease-in}.swiper-button{background:#fff;border-radius:5px;width:185px;height:52px;cursor:pointer;border:0;display:block;font-weight:500;font-size:16px;line-height:18px;color:rgba(0,0,0,.4)}.swiper-price{font-weight:700;font-size:24px;line-height:28px;color:#000}.swiper-price-division{display:none}.profile{padding:20px 10px;width:270px;background:rgba(149,100,170,.1);border:2px solid rgba(149,100,170,.2);border-radius:10px;display:flex;flex-direction:column;align-items:flex-start}.profile__ava{width:50px;height:50px;border-radius:50px}.profile__status,.profile__title{margin:0;font-family:"Ubuntu";font-style:normal;font-weight:700;font-size:16px;line-height:18px;color:#000}.profile__status{padding:5px 10px;background:#684677;border-radius:5px;font-weight:400;font-size:10px;line-height:11px;color:#fff}.profile__list{margin:0;padding:20px 10px;list-style-type:none;display:flex;flex-direction:column;align-items:flex-start;gap:20px}.profile__list-item{position:relative}.profile__list-item:nth-child(1) a::before{content:url(../img/adcombo__icon-profile--1.svg);position:absolute;left:0;bottom:-5px}.profile__list-item:nth-child(2) a::before{content:url(../img/adcombo__icon-profile--2.svg);position:absolute;left:0;bottom:-5px}.profile__list-item:nth-child(3) a::before{content:url(../img/adcombo__icon-profile--3.svg);position:absolute;left:0;bottom:-5px}.profile__list-item:nth-child(4) a::before{content:url(../img/adcombo__icon-profile--4.svg);position:absolute;left:0;bottom:-5px}.profile__list-item:nth-child(5) a::before{content:url(../img/adcombo__icon-profile--5.svg);position:absolute;left:0;bottom:-5px}.profile__list-item:nth-child(6) a::before{content:url(../img/adcombo__icon-profile--6.svg);position:absolute;left:0;bottom:-5px}.profile__list-item:nth-child(7) a::before{content:url(../img/adcombo__icon-profile--7.svg);position:absolute;left:0;bottom:-5px}.profile__list-link{padding-left:30px;font-family:"Ubuntu";font-style:normal;font-weight:400;font-size:16px;line-height:18px;text-decoration:none;color:#000;transition:all .4s ease-in}.profile__list-link:hover{color:#999}.profile__user{padding-bottom:22px;position:relative;width:100%;display:flex;align-items:center;gap:10px}.profile__user-content{display:flex;flex-direction:column;align-items:flex-start;gap:10px}.profile__user::before{content:"";position:absolute;left:0;right:0;bottom:0;height:2px;background:#9564aa;opacity:.2}}@media screen and (min-width:768px){.header__container{max-width:1200px;margin:0 auto;padding:20px}.header__title{margin:0;display:block}.header__menu-item{position:static}.header__menu-item--premium{background:#684677;border-radius:10px}.header__menu-link{font-size:16px}.header__menu-link--premium{display:block}.burger{display:none}}@media screen and (max-width:1200px){.content__banner{display:none}}@media screen and (max-width:992px){.parallax{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */